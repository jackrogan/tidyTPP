% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_melt_plot_with_model.R
\name{build_melt_plot_with_model}
\alias{build_melt_plot_with_model}
\title{Build Protein Melt Plot Using Predicted Data}
\usage{
build_melt_plot_with_model(
  data,
  predicted_data,
  annotate = c("R_sq", "melt_point", "both", "none"),
  rules = TRUE,
  facets = TRUE,
  quan_column = "rel_quantity",
  colour_column = "Condition",
  shape_column = "Replicate",
  facets_column = "Protein_ID"
)
}
\arguments{
\item{data}{A data frame (or \link{tibble}) containing proteomics data from a
thermal protein profiling (TPP) experiment. In all cases, this must contain
the columns:
\describe{
\item{Temp}{Experiment temperature in \eqn{\degree C}, will be used for the x
axis values}
\item{rel_quantity}{(or name specified with \code{quan_name}) Protein quantity
measurement corresponding to \verb{Fraction non-denatured}, will be used for the
y-axis values}
}
The following columns will be used for the \code{ggplot} \code{aesthetics}, but
default values will be assumed if not present:
\describe{
\item{Protein_ID}{Gene name identifying the protein - used for facets and
to provide values for default \code{Condition} column; defaults to generic
"Protein"}
\item{Condition}{Treatment given to this sample set - used for colour;
defaults to Protein_ID values}
\item{Replicate}{Replicate number for this sample set - used for shape;
defaults to "01"}
}}

\item{predicted_data}{A data frame (or \link{tibble}) containing predicted protein
melting curve data \emph{e.g.} from \code{\link[=predict_melt_curve]{predict_melt_curve()}}. As for \code{data},
this must contain the columns \emph{Temp} and \emph{rel_quantity} (or name
specified with \code{quan_name}), and the columns \emph{Protein_ID},
\emph{Condition} and \emph{Replicate} will be used for \code{ggplot} aesthetics,
but defaults will be supplied if they are missing.}

\item{annotate}{Control which text annotations should be added to the plot:
\itemize{
\item "R_sq" adds \eqn{R^2} fit regression values (top-right)
\item "melt_point" adds \eqn{T_m} melting points (bottom-left)
\item "both" and "none" add both and none, respectively
}}

\item{rules}{Boolean. Whether to add rules showing \eqn{T_m}}

\item{facets}{Boolean. Whether to separate facets using \emph{Protein_ID}}

\item{quan_column}{Character. The column in \code{data} and \code{predicted_data} used
for plot y-values}

\item{colour_column}{Character. The column in \code{data} and \code{predicted_data} used
for plot colour aesthetic}

\item{shape_column}{Character. The column in \code{data} and \code{predicted_data} used
for plot shape aesthetic}

\item{facets_column}{Character. The column in \code{data} and \code{predicted_data} used
for plot facets}
}
\value{
A \code{ggplot} object.
}
\description{
\code{build_melt_plot_with_model()} creates a \link{ggplot2} plot, showing the protein
melting curves given in \code{data} and \code{predicted_data} for observed points and
fitted line, respectively.
}
\examples{
# Minimal data - ATIC melt curve
x <- quan_data_ATIC
x_predicted <- predict_melt_curve(MP_data_ATIC)

# Create plot using default appearance
build_melt_plot_with_model(x, x_predicted)

# Specify column names
build_melt_plot_with_model(
  data = x,
  predicted_data = x_predicted,
  quan_column = "rel_quantity",
  colour_column = "Condition",
  shape_column = "Replicate",
  facets_column = "Protein_ID"
  )

# Remove annotations and facets
build_melt_plot_with_model(
  data = x,
  predicted_data = x_predicted,
  annotate = "none",
  rules = FALSE,
  facets = FALSE
  )

# As a ggplot object, additions can be made to returned plot
# For example, the default behaviour is to hide the "shape" legend,
# however, this can be disabled:
build_melt_plot_with_model(x, x_predicted) +
  ggplot2::scale_shape_discrete()
}
