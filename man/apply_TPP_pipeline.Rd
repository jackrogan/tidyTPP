% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply_TPP_pipeline.R
\name{apply_TPP_pipeline}
\alias{apply_TPP_pipeline}
\title{Apply tidyTPP TPP-TR pipeline with default settings}
\usage{
apply_TPP_pipeline(
  datafile,
  config,
  path = NULL,
  import_format = "Spectronaut",
  to_plot = FALSE,
  max_cores = 4
)
}
\arguments{
\item{datafile}{Character. Specify a filename for a delimited text file or
\emph{.xlsx} spreadsheet containing the protein quantity data.}

\item{config}{Either a character, specifying the file name of a delimited
file with experiment configuration, to be opened with
\link{read.table} / \link[readxl:read_excel]{readxl::read_excel} or a \code{data.frame} / \code{tibble} with
configuration information.

This should take the form of a table with the column names
\emph{Experiment}, \emph{Condition}, \emph{Replicate} and
\emph{Temp}.}

\item{path}{Character. Optionally, the path to a directory containing the
data and configuration files. If given, this will be appended to both paths.}

\item{import_format}{Character. Specify a format to import with an
\emph{import_} function:
\itemize{
\item "Spectronaut" or "SN" - peptide report from \emph{Spectronaut} DIA protein
quantification (\emph{.csv}): \link{import_spectronaut}
\item "ProteomeDiscover" or "PD" - exported proteins table from
\emph{Thermo Proteome Discoverer} DDA quantification (\emph{.txt}):
\link{import_proteomediscoverer}
\item For a custom format import, use \link{import_TPP} directly
}}

\item{to_plot}{Boolean. Whether to generate plots to the console:
\itemize{
\item Normalisation curves
\item NPARC analysis F-score and p-value distribution
\item Hit protein melting curves
}}

\item{max_cores}{Integer. Maximum number of cores to run analysis using. If
1, will use no parallel or multi-core functions.}
}
\value{
A \code{tibble} of hit proteins, sorted by NPARC p-value
}
\description{
Apply tidyTPP TPP-TR pipeline with default settings: by default imports
Spectronaut report \emph{.csv} file.
}
\examples{
 # Minimal Example - four-protein data
 temp_loc <- tempdir()
 source_report <-
   system.file("extdata", "4_protein_peptide_report.csv", package = "tidyTPP")
 source_config <-
   system.file("extdata", "4_protein_config.csv", package = "tidyTPP")
 file.copy(c(source_report, source_config), temp_loc)

 # Analyse using single core, generate and show plots
 normP_hits <-
   apply_TPP_pipeline(datafile = "4_protein_peptide_report.csv",
                      config = "4_protein_config.csv",
                      path = temp_loc,
                      import_format = "Spectronaut",
                      to_plot = TRUE,
                      max_cores = 1)

 unlink(
  c(
    paste0(temp_loc, "\\\\", "4_protein_peptide_report.csv"),
    paste0(temp_loc, "\\\\", "4_protein_config.csv"),
    paste0(temp_loc, "\\\\", "4_protein_peptide_Results.xlsx"),
    paste0(temp_loc, "\\\\", "4_protein_peptide_Hits.xlsx"))
  )

 normP_hits
}
